---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-preview
spec:
  params:
    - name: git-revision # for some reason $(resources.git-repo.revision) does not work as a param to a task
      type: string
      description: the revision to update status on
    - name: git-repo-name
      type: string
      description: the name of the repo
    - name: git-repo-full-name
      type: string
      description: the name of the repo org/name
    - name: git-pr-url
      type: string
      description: the name of the repo org/name
    - name: git-pr-base-sha
      type: string
      description: the bsae sha for the pull request
    - name: git-repo-url
      type: string
      description: the url to clone the repo
    - name: git-pr-head-ref
      type: string
      description: the head branch ref
  workspaces:
    - name: source
  resources:
    - name: git-repo
      type: git
  tasks:
    - name: pending-status
      taskRef:
        kind: Task
        name: github-set-status
      params:
        - name: REPO_FULL_NAME
          value: $(params.git-repo-full-name)
        - name: SHA
          value: $(params.git-revision)
        - name: DESCRIPTION
          value: "Build has started"
        - name: STATE
          value: pending
        - name: TARGET_URL
          value: https://tekon/dashboard/taskrun/log
    - name: clone
      taskRef: 
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: $(params.git-repo-url)
        - name: revision
          value: $(params.git-revision)
        - name: depth
          value: "0"
      workspaces:
        - name: output
          workspace: source

#### inventory

    - name: build-inventory
      taskRef:
        kind: ClusterTask
        name: maven
      runAfter:
        - clone
      params:
        - name: GOALS
          value:
            - package
            - quarkus:build 
            - -f 
            - inventory-quarkus/pom.xml
            - -DskipTests
      workspaces:
        - name: maven-settings
          workspace: source
        - name: source
          workspace: source
    - name: image-inventory
      taskRef:
        name: buildah
        kind: Task
      retries: 1
      runAfter:
        - build-inventory
      params:
        - name: TLSVERIFY
          value: "false"
        - name: DOCKERFILE
          value: ./inventory-quarkus/src/main/docker/Dockerfile.jvm
        - name: CONTEXT
          value: ./inventory-quarkus/
        - name: IMAGE
          value: image-registry.openshift-image-registry.svc:5000/opentlc-mgr-codeready/inventory:$(params.git-revision)
      workspaces:
        - name: source
          workspace: source
    - name: preview-inventory
      taskRef:
        name: ike-create
        kind: Task
      runAfter:
        - image-inventory
      params:
        - name: session
          value: $(params.git-pr-head-ref)
        - name: target
          value: inventory-v1
        - name: route
          value: "header:ike-session-id=$(params.git-pr-head-ref)"
        - name: namespace
          value: opentlc-mgr-codeready
        - name: image
          value: image-registry.openshift-image-registry.svc:5000/opentlc-mgr-codeready/inventory:$(params.git-revision)

    - name: session-url
      taskRef:
        name: ike-session-url
        kind: Task
      runAfter:
        - preview-inventory
      params:
        - name: session
          value: $(params.git-pr-head-ref)
        - name: namespace
          value: opentlc-mgr-codeready
    - name: preview-comment
      taskRef:
        kind: Task
        name: github-add-comment
      runAfter:
        - session-url
      params:
        - name: REQUEST_URL
          value: $(params.git-pr-url)
        - name: COMMENT_OR_FILE
          value: |
            The changes are ready to be reviewed via [$(tasks.session-url.results.url)](http://$(tasks.session-url.results.url))
    - name: test
      taskRef:
        name: run-tests
        kind: Task
      runAfter:
        - session-url
      params:
        - name: url
          value: $(tasks.session-url.results.url
    - name: success-status
      taskRef:
        kind: Task
        name: github-set-status
      runAfter:
        - test
      params:
        - name: REPO_FULL_NAME
          value: $(params.git-repo-full-name)
        - name: SHA
          value: $(params.git-revision)
        - name: DESCRIPTION
          value: "Build has started"
        - name: STATE
          value: success
        - name: TARGET_URL
          value: https://tekon/dashboard/taskrun/log

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: undeploy-preview
spec:
  params:
    - name: git-pr-head-ref
      type: string
      description: the head branch ref
  tasks:
    - name: remove-inventory
      taskRef:
        name: ike-delete
        kind: Task
      params:
        - name: session
          value: $(params.git-pr-head-ref)
        - name: target
          value: inventory-v1
        - name: namespace
          value: opentlc-mgr-codeready

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: deploy-app
spec:
  params:
    - name: git-revision # for some reason $(resources.git-repo.revision) does not work as a param to a task
      type: string
      description: the revision to update status on
    - name: git-repo-name
      type: string
      description: the name of the repo
    - name: git-repo-full-name
      type: string
      description: the name of the repo org/name
    - name: git-pr-url
      type: string
      description: the name of the repo org/name
    - name: git-pr-base-sha
      type: string
      description: the bsae sha for the pull request
    - name: git-repo-url
      type: string
      description: the url to clone the repo
    - name: git-pr-head-ref
      type: string
      description: the head branch ref
  workspaces:
    - name: source
    - name: basic-auth
  resources:
    - name: git-repo
      type: git
  tasks:
    - name: clone
      taskRef: 
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: https://github.com/maistra/istio-workspace-crw-coolstore-deploy.git
        - name: revision
          value: main
        - name: depth
          value: "0"
      workspaces:
        - name: output
          workspace: source
    - name: update-image
      taskRef:
        name: update-image-ref
      workspaces:
        - name: source
          workspace: source
      params:
        - name: file
          value: "gitops/inventory-deployment.yaml"
        - name: image
          value: image-registry.openshift-image-registry.svc:5000/opentlc-mgr-codeready/inventory:$(params.git-revision)
      runAfter:
        - clone
    - name: push
      taskRef:
        name: git-cli
      workspaces:
        - name: source
          workspace: source
        - name: basic-auth
          workspace: basic-auth
      params:
        - name: GIT_USER_NAME
          value: alien-ike
        - name: GIT_USER_EMAIL
          value: arquillian-team@lists.jboss.org
        - name: GIT_SCRIPT
          value: |
            git checkout main
            git add .
            git commit -v -m 'deploy: new inventory v $(params.git-revision)'
            git push origin main
      runAfter:
        - update-image

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: run-tests
spec:
  params:
    - name: url
      type: string
  steps:
    - name: execute
      image: registry.access.redhat.com/ubi8/ubi-minimal:8.2
      script: |
        #curl -D - $(params.url)
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-image-ref
spec:
  params:
    - name: image
      type: string
    - name: file
      type: string
  workspaces:
    - name: source
  steps:
    - name: execute
      workingDir: $(workspaces.source.path)
      image: docker.io/mikefarah/yq:4.16.2@sha256:0d4f6e27bdcac7316f635acd524ab0eecc4ad50834b54d10322268650c7712cb
      script: |
        echo yq eval -i ".spec.template.spec.containers[0].image=\"$(params.image)\"" "$(params.file)"
        yq eval -i ".spec.template.spec.containers[0].image=\"$(params.image)\"" "$(params.file)"
